<?xml version="1.0" encoding="utf-8"?>
<s:Image
		xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx" 
		creationComplete="creationCompleteHandler(event)">

		
	<fx:Declarations>

	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import flash.events.MouseEvent;
			import spark.effects.Resize;
			import mx.events.FlexEvent;
			import mx.rpc.AsyncToken;
			import mx.rpc.Responder;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.validators.NumberValidator;
			
			import com.pberlowski.service.ImageServiceClient;
			
			private var fitWidth:Number;
			private var fitHeight:Number;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{	
				var ro:ImageServiceClient = new ImageServiceClient(FlexGlobals.topLevelApplication.parameters.endpointUri);
				var token:AsyncToken = ro.get_image(FlexGlobals.topLevelApplication.parameters.imgCode);
				token.addResponder(new mx.rpc.Responder(onImageSuccess, onImageFault)); 			
			}
			
			private function onImageSuccess(event:ResultEvent):void {
				this.source = event.result;
				fitWidth = FlexGlobals.topLevelApplication.width;
				fitHeight = FlexGlobals.topLevelApplication.height;
				fitToScreen(null);
			}

			protected function fitToScreen(event:MouseEvent):void {
				removeEventListener(MouseEvent.CLICK, fitToScreen);
				width = fitWidth;
				height = fitHeight;
				addEventListener(MouseEvent.CLICK, toOriginal);
			}

			protected function toOriginal(event:MouseEvent):void {
				removeEventListener(MouseEvent.CLICK, toOriginal);
				width = Number.NaN;
				height = Number.NaN;
				addEventListener(MouseEvent.CLICK, fitToScreen);
			}
			
			private function onImageFault(event:FaultEvent):void {
				var text:String = "error :  \n" +  ObjectUtil.toString(event.fault);
				Alert.show(text, 'Error!', Alert.OK);
			}	
			
		]]>
	</fx:Script>

</s:Image>
